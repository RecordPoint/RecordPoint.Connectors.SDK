{
  "swagger": "2.0",
  "info": {
    "title": "Records365 vNext Connector API",
    "description": "This is the Records365 vNext Connector API Home",
    "version": "v1"
  },
  "basePath": "/connector",
  "paths": {
    "/api/Aggregations/{fieldName}/{fieldValue}": {
      "get": {
        "tags": [
          "Aggregations"
        ],
        "summary": "Gets a collection of aggregations that match a single metadata field value.",
        "operationId": "GET_api/Aggregations/{fieldName}/{fieldValue}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fieldName",
            "description": "The name of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "fieldValue",
            "description": "The required value of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "pagesize",
            "description": "The maximum number of items to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AggregationSubmissionOutputModel"
              }
            }
          }
        }
      }
    },
    "/api/Aggregations/MultiTenanted/{fieldName}/{fieldValue}": {
      "get": {
        "tags": [
          "Aggregations"
        ],
        "summary": "Gets a collection of aggregations that match a single metadata field value for multi Tenanted Connectors",
        "operationId": "GET_api/Aggregations/MultiTenanted/{fieldName}/{fieldValue}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fieldName",
            "description": "The name of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "fieldValue",
            "description": "The required value of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "connectorId",
            "description": "",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "The maximum number of items to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AggregationSubmissionOutputModel"
              }
            }
          }
        }
      }
    },
    "/api/Aggregations": {
      "post": {
        "tags": [
          "Aggregations"
        ],
        "summary": "Submits aggregations to Records365 vNext.\r\nAll aggregations are to be submitted to this endpoint.",
        "operationId": "POST_api/Aggregations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          },
          {
            "in": "body",
            "name": "body",
            "description": "The aggregation to be managed.",
            "schema": {
              "$ref": "#/definitions/AggregationSubmissionInputModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/api/AuditEvents": {
      "put": {
        "tags": [
          "AuditEvents"
        ],
        "summary": "Submits a content source event to the Records365 vNext audit log.",
        "operationId": "PUT_api/AuditEvents",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          },
          {
            "in": "body",
            "name": "body",
            "description": "Audit event.",
            "schema": {
              "$ref": "#/definitions/ConnectorAuditEventModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/api/Binaries": {
      "post": {
        "tags": [
          "Binaries"
        ],
        "summary": "Submits a binary to be archived and protected by Records365 vNext.",
        "operationId": "POST_api/Binaries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ConnectorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ItemExternalId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "BinaryExternalId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "FileName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Location",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CorrelationId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "IsOldVersion",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SkipEnrichment",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "ItemSourceLastModifiedDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "412": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/api/Binaries/GetSASToken": {
      "post": {
        "tags": [
          "Binaries"
        ],
        "summary": "Get SAS Token for blob Resource",
        "operationId": "POST_api/Binaries/GetSASToken",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DirectBinarySubmissionInputModel"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DirectBinarySubmissionResponseModel"
            }
          },
          "412": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/api/Binaries/NotifyBinarySubmission": {
      "post": {
        "tags": [
          "Binaries"
        ],
        "summary": "Notifies Records365 that a new Binary has been uploaded",
        "operationId": "POST_api/Binaries/NotifyBinarySubmission",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          },
          {
            "in": "body",
            "name": "body",
            "description": "The binary metadata information",
            "schema": {
              "$ref": "#/definitions/DirectBinarySubmissionInputModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "412": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/api/ConnectorConfigurations/GetMultiTenanted": {
      "get": {
        "tags": [
          "ConnectorConfigurations"
        ],
        "summary": "Gets a connector configure model via connector ID MultiTenanted",
        "operationId": "GET_api/ConnectorConfigurations/GetMultiTenanted",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "connectorId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConnectorConfigModel"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ConnectorConfigurations/{id}": {
      "get": {
        "tags": [
          "ConnectorConfigurations"
        ],
        "summary": "Gets a connector configure model by its connector ID.",
        "operationId": "GET_api/ConnectorConfigurations/{id}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConnectorConfigModel"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ConnectorConfigurations": {
      "get": {
        "tags": [
          "ConnectorConfigurations"
        ],
        "summary": "Get all connectors for the given clientId across all tenants",
        "operationId": "GET_api/ConnectorConfigurations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConnectorConfigModel"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Items/{fieldName}/{fieldValue}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Gets a collection of items that match a single metadata field value.",
        "operationId": "GET_api/Items/{fieldName}/{fieldValue}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fieldName",
            "description": "The name of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "fieldValue",
            "description": "The required value of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "pagesize",
            "description": "The maximum number of items to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemSubmissionOutputModel"
              }
            }
          }
        }
      }
    },
    "/api/Items/MultiTenanted/{fieldName}/{fieldValue}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Gets a collection of items that match a single metadata field value for MutiTenanted Environment",
        "operationId": "GET_api/Items/MultiTenanted/{fieldName}/{fieldValue}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fieldName",
            "description": "The name of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "fieldValue",
            "description": "The required value of the metadata field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "connectorId",
            "description": "",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "The maximum number of items to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemSubmissionOutputModel"
              }
            }
          }
        }
      }
    },
    "/api/Items": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Submits an item to be managed by Records365 vNext.\r\nAll records are to be submitted to this endpoint.",
        "operationId": "POST_api/Items",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          },
          {
            "in": "body",
            "name": "body",
            "description": "The item to be managed.",
            "schema": {
              "$ref": "#/definitions/ItemSubmissionInputModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ItemAcceptanceModel"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/ItemAcceptanceModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/api/Notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Gets a collection of notifications that are awaiting processing and acknowledgement by the connector.",
        "operationId": "GET_api/Notifications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "connectorId",
            "description": "Connector ID for multi tenanted connections",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConnectorNotificationModel"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Acknowledges a notification as having been processed by the connector.",
        "operationId": "POST_api/Notifications",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          },
          {
            "in": "body",
            "name": "body",
            "description": "The acknowledgement information.",
            "schema": {
              "$ref": "#/definitions/ConnectorNotificationAcknowledgeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/api/Notifications/{connectorId}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Gets a collection of notifications that are awaiting processing and acknowledgement by the connector.",
        "operationId": "GET_api/Notifications/{connectorId}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectorId",
            "description": "The query information",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConnectorNotificationModel"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AggregationSubmissionInputModel": {
      "required": [
        "connectorId",
        "externalId",
        "sourceCreatedBy",
        "sourceCreatedDate",
        "sourceLastModifiedBy",
        "sourceLastModifiedDate",
        "title"
      ],
      "type": "object",
      "properties": {
        "itemTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "securityProfileIdentifier": {
          "type": "string"
        },
        "sourceProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubmissionMetaDataModel"
          }
        },
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationshipDataModel"
          }
        },
        "externalId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "sourceLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "sourceLastModifiedBy": {
          "type": "string"
        },
        "sourceCreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "sourceCreatedBy": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "parentExternalId": {
          "type": "string"
        },
        "barcodeType": {
          "type": "string"
        },
        "barcodeValue": {
          "type": "string"
        },
        "recordCategoryId": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AggregationSubmissionOutputModel": {
      "required": [
        "connectorId",
        "externalId",
        "sourceCreatedBy",
        "sourceCreatedDate",
        "sourceLastModifiedBy",
        "sourceLastModifiedDate",
        "title"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        },
        "itemNumber": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "contentSource": {
          "type": "string"
        },
        "isVitalRecord": {
          "type": "boolean"
        },
        "sourceProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaDataModel"
          }
        },
        "externalId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "sourceLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "sourceLastModifiedBy": {
          "type": "string"
        },
        "sourceCreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "sourceCreatedBy": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "parentExternalId": {
          "type": "string"
        },
        "barcodeType": {
          "type": "string"
        },
        "barcodeValue": {
          "type": "string"
        },
        "recordCategoryId": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ConnectorAuditEventModel": {
      "required": [
        "connectorId",
        "eventExternalId",
        "eventType",
        "itemExternalId"
      ],
      "type": "object",
      "properties": {
        "eventExternalId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "eventType": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "itemExternalId": {
          "type": "string"
        },
        "sourceProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubmissionMetaDataModel"
          }
        }
      }
    },
    "ConnectorConfigModel": {
      "required": [
        "displayName",
        "hasSubmittedData",
        "status"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "transactionId": {
          "format": "string",
          "type": "string"
        },
        "connectorTypeId": {
          "type": "string"
        },
        "connectorTypeConfigurationId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "tenantDomainName": {
          "type": "string"
        },
        "originatingOrganization": {
          "type": "string"
        },
        "enabledHistory": {
          "type": "string"
        },
        "displayName": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "hasSubmittedData": {
          "type": "boolean"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaDataModel"
          }
        },
        "clientId": {
          "type": "string"
        },
        "protectionEnabled": {
          "type": "boolean"
        },
        "filters": {
          "$ref": "#/definitions/FiltersModel"
        }
      }
    },
    "ConnectorNotificationAcknowledgeModel": {
      "required": [
        "connectorId",
        "notificationId",
        "processingResult"
      ],
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string"
        },
        "notificationId": {
          "type": "string"
        },
        "processingResult": {
          "type": "string"
        },
        "connectorStatusMessage": {
          "type": "string"
        }
      }
    },
    "ConnectorNotificationModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/ItemSubmissionOutputModel"
        },
        "connectorConfig": {
          "$ref": "#/definitions/ConnectorConfigModel"
        },
        "context": { }
      }
    },
    "DirectBinarySubmissionInputModel": {
      "required": [
        "binaryExternalId",
        "connectorId",
        "itemExternalId"
      ],
      "type": "object",
      "properties": {
        "mimeType": {
          "type": "string"
        },
        "fileSize": {
          "format": "int64",
          "type": "integer"
        },
        "fileHash": {
          "type": "string"
        },
        "sourceLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "itemExternalId": {
          "type": "string"
        },
        "binaryExternalId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "isOldVersion": {
          "type": "boolean"
        },
        "skipEnrichment": {
          "type": "boolean"
        },
        "itemSourceLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DirectBinarySubmissionResponseModel": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "maxFileSize": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ErrorType"
        },
        "message": {
          "type": "string"
        },
        "messageCode": {
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/ErrorSeverity"
        },
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "innerError": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          }
        },
        "aggregateErrors": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "ErrorResponseModel": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorModel"
        }
      }
    },
    "ErrorSeverity": {
      "format": "string",
      "enum": [
        "Critical",
        "Error",
        "Warning",
        "Informational"
      ],
      "type": "string"
    },
    "ErrorType": {
      "format": "string",
      "enum": [
        "General",
        "Aggregate",
        "Validation",
        "PartialSuccess"
      ],
      "type": "string"
    },
    "FiltersModel": {
      "type": "object",
      "properties": {
        "included": {
          "$ref": "#/definitions/SearchTreeNodeModel"
        },
        "excluded": {
          "$ref": "#/definitions/SearchTreeNodeModel"
        },
        "includedExpression": {
          "type": "string"
        },
        "excludedExpression": {
          "type": "string"
        }
      }
    },
    "ItemAcceptanceModel": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "sourceLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "aggregationStatus": {
          "type": "string"
        }
      }
    },
    "ItemSubmissionInputModel": {
      "required": [
        "author",
        "connectorId",
        "contentVersion",
        "externalId",
        "location",
        "mediaType",
        "parentExternalId",
        "sourceCreatedBy",
        "sourceCreatedDate",
        "sourceLastModifiedBy",
        "sourceLastModifiedDate",
        "title"
      ],
      "type": "object",
      "properties": {
        "securityProfileIdentifier": {
          "type": "string"
        },
        "sourceProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubmissionMetaDataModel"
          }
        },
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationshipDataModel"
          }
        },
        "binariesSubmitted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirectBinarySubmissionInputModel"
          }
        },
        "externalId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "sourceLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "sourceLastModifiedBy": {
          "type": "string"
        },
        "sourceCreatedBy": {
          "type": "string"
        },
        "sourceCreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "contentVersion": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "parentExternalId": {
          "type": "string"
        },
        "barcodeType": {
          "type": "string"
        },
        "barcodeValue": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ItemSubmissionOutputModel": {
      "required": [
        "author",
        "connectorId",
        "contentVersion",
        "externalId",
        "location",
        "mediaType",
        "parentExternalId",
        "sourceCreatedBy",
        "sourceCreatedDate",
        "sourceLastModifiedBy",
        "sourceLastModifiedDate",
        "title"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        },
        "itemNumber": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "contentSource": {
          "type": "string"
        },
        "connectorDisplayName": {
          "type": "string"
        },
        "isVitalRecord": {
          "type": "boolean"
        },
        "originatingOrganization": {
          "type": "string"
        },
        "previousDisposalAction": {
          "type": "string"
        },
        "previousDisposalDate": {
          "format": "date-time",
          "type": "string"
        },
        "previousDisposalBy": {
          "type": "string"
        },
        "previousDisposalById": {
          "type": "string"
        },
        "nextDisposalAction": {
          "type": "string"
        },
        "nextDisposalDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentDisposalStatus": {
          "type": "string"
        },
        "sourceProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaDataModel"
          }
        },
        "externalId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "sourceLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "sourceLastModifiedBy": {
          "type": "string"
        },
        "sourceCreatedBy": {
          "type": "string"
        },
        "sourceCreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "contentVersion": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "parentExternalId": {
          "type": "string"
        },
        "barcodeType": {
          "type": "string"
        },
        "barcodeValue": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "MetaDataModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        },
        "type": {
          "format": "string",
          "type": "string"
        },
        "value": {
          "format": "string",
          "type": "string"
        },
        "isSysAdminOnly": {
          "format": "string",
          "type": "boolean"
        }
      }
    },
    "RelationshipDataModel": {
      "required": [
        "relatedItemNumber",
        "relationshipType"
      ],
      "type": "object",
      "properties": {
        "relatedItemNumber": {
          "format": "string",
          "type": "string"
        },
        "relationshipType": {
          "format": "string",
          "type": "string"
        }
      }
    },
    "SearchTermModel": {
      "required": [
        "fieldName"
      ],
      "type": "object",
      "properties": {
        "fieldName": {
          "format": "string",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "fieldType": {
          "format": "string",
          "type": "string"
        },
        "operator": {
          "format": "string",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "fieldValue": {
          "format": "string",
          "type": "string"
        },
        "categoricalValueType": {
          "format": "string",
          "type": "string"
        },
        "searchContextIdentifier": {
          "format": "string",
          "type": "string"
        }
      }
    },
    "SearchTreeNodeModel": {
      "required": [
        "boolOperator"
      ],
      "type": "object",
      "properties": {
        "boolOperator": {
          "format": "string",
          "maxLength": 3,
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTreeNodeModel"
          }
        },
        "searchTerm": {
          "$ref": "#/definitions/SearchTermModel"
        }
      }
    },
    "SubmissionMetaDataModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "type": {
          "format": "string",
          "type": "string"
        },
        "value": {
          "format": "string",
          "type": "string"
        },
        "isSysAdminOnly": {
          "format": "string",
          "type": "boolean"
        }
      }
    }
  }
}